\documentclass[titlepage, 11pt]{report}

\usepackage{array} % provides extra options for tables
\usepackage{booktabs} % for enhancing the presentation of tables
\usepackage{caption}
\usepackage{fontspec} % for loading arbitrary fonts
\usepackage{geometry} % for changing margins
\usepackage{graphicx} % for loading the cover image
\usepackage[hidelinks]{hyperref} % for making hyperlinks
\usepackage{minted} % for colour-coding code/data snippets
\usepackage{parskip} % for adding spacing between paragraphs
\usepackage{pstricks} % for loading the cover image
\usepackage{titlesec} % for defining the style of headings
\usepackage{tocloft} % for adjusting the spacing of the table of contents
\usepackage{xcolor} % for creating custom colours

\captionsetup{font=bf, labelformat=empty}

\usepackage[T1]{fontenc}
\usepackage{DejaVuSans}
\renewcommand*\familydefault{\sfdefault} % use the sans-serif variant by default
\setmonofont{JetBrains Mono}


\definecolor{spdxblue}{RGB}{0,65,107}
\definecolor{spdxlightblue}{RGB}{67,152,204}


\geometry{
  paper=a4paper,
  top=2cm,
  bottom=4cm,
  left=2cm,
  right=2cm,
}


\parindent=0pt


\titleformat{\chapter}[display]{
  \fontspec{Trueno}\color{spdxlightblue}\huge\bfseries}{Clause \thechapter}{20pt}{}
\titlespacing*{\chapter} {0pt}{50pt}{40pt}

\titleformat{\section}{
  \fontspec{Trueno}\color{spdxblue}\Large\bfseries}{\thesection}{1em}{}
\titlespacing*{\section} {0pt}{3.5ex plus 1ex minus .2ex}{2.3ex plus .2ex}

\titleformat{\subsection}{
  \fontspec{Trueno}\color{spdxblue}\large\bfseries}{\thesubsection}{1em}{}
\titlespacing*{\subsection} {0pt}{3.25ex plus 1ex minus .2ex}{1.5ex plus .2ex}


\renewcommand*{\cftsecnumwidth}{30pt}
\renewcommand*{\cftsubsecnumwidth}{40pt}
% ensures that there is enough space in the table of contents for
% section numbers with lots of digits


\renewcommand*{\cfttoctitlefont}{\fontspec{Trueno}\huge\bfseries\color{spdxlightblue}}
\renewcommand*{\cftchapfont}{\fontspec{Trueno}\large\bfseries\color{spdxblue}}


\begin{document}

\begin{titlepage}
  \centering
  \vspace*{3cm}

  \scalebox{2}{\input{logo.pdf_tex}}

  \par\vspace{3cm}

  {\scshape\Large Software Package Data Exchange\textregistered (SPDX\textregistered)\par}

  \vspace{20pt}

  {\scshape\large Specification Version 2.3.0\par}

  \par
\end{titlepage}

\tableofcontents


\chapter*{The Software Package Data Exchange (SPDX) Specification Version 2.3}
\addcontentsline{toc}{chapter}{Copyright}

Copyright \textcopyright 2010-2022 Linux Foundation and its Contributors. This
work is licensed under the Creative Commons Attribution License 3.0 Unported
(CC-BY-3.0) reproduced in its entirety in Annex J herein. All other rights are
expressly reserved.

This PDF edition typeset in 11pt DejaVu Sans by Sebastian Crane.

With thanks to Adam Cohn, Alan Tse, Alexios Zavras, Andrew Back, Ann Thornton,
Basil Peace, Bill Schineller, Bradlee Edmondson, Bruno Cornec, Ciaran Farrell,
Daniel German, David Edelsohn, David Kemp, David A. Wheeler, Debra McGlade,
Dennis Clark, Dick Brooks, Ed Warnicke, Eran Strod, Eric Thomas, Esteban
Rockett, Gary O'Neall, Guillaume Rousseau, Hassib Khanafer, Henk Birkholz,
Hiroyuki Fukuchi, Jack Manbeck, Jaime Garcia, Jeff Luszcz, Jilayne Lovejoy, John
Ellis, Jonas Oberg, Kamsang Salima, Karen Copenhaver, Kate Stewart, Kevin
Mitchell, Kim Weins, Kirsten Newcomer, Kris Reeves, Liang Cao, Lon Hohberger,
Marc-Etienne Vargenau, Mark Gisi, Marshall Clow, Martin Michlmayr, Martin von
Willebrand, Mark Atwood, Matija Šuklje, Matt Germonprez, Maximilian Huber,
Michael J. Herzog, Michel Ruffin, Nisha Kumar, Norio Kobota, Nuno Brito, Oliver
Fendt, Paul Madick, Peter Williams, Phil Robb, Philip Koltun, Philip Odence,
Phillippe Ombredanne, Pierre Lapointe, Rana Rahal, Robert Martin, Robin Gandhi,
Rose Judge, Sam Ellis, Sameer Ahmed, Scott K Peterson, Scott Lamons, Scott
Sterling, Sean Barnum, Sebastian Crane, Shane Coughlan, Steve Cropper, Steve
Winslow, Stuart Hughes, Thomas F. Incorvia, Thomas Steenbergen, Tom Callaway,
Tom Vidal, Toru Taima, Venkata Krishna, W. Trevor King, William Bartholomew, Yev
Bronshteyn, Yoshiko Ouchi, Yoshiyuki Ito, Yuji Nomura and Zachary McFarland for
their contributions and assistance.


\chapter*{Introduction}
\addcontentsline{toc}{chapter}{Introduction}

Companies and organizations (collectively ``Organizations'') are widely using
and reusing open source and other software packages. Accurate identification of
software is key for many supply chain processes. Vulnerability remediation
starts with knowing the details of which version of software is in use on a
system. Compliance with the associated licenses requires a set of analysis
activities and due diligence that each Organization performs independently,
which may include a manual and/or automated scan of software and identification
of associated licenses followed by manual verification. Software development
teams across the globe use the same open source packages, but little
infrastructure exists to facilitate collaboration on the analysis or share the
results of these analysis activities. As a result, many groups are performing
the same work leading to duplicated efforts and redundant information. With this
document, the SPDX workgroup has created a data exchange format so that
information about software packages and related content may be collected and
shared in a common format with the goal of saving time and improving data
accuracy.


\chapter{Scope}

This Software Package Data Exchange (SPDX) specification defines a standard data
format for communicating the component and metadata information associated with
software packages. An SPDX document can be associated with a set of software
packages, files or snippets and contains information about the software in the
SPDX format described in this specification.


\chapter{Normative references}

The following documents are referred to in the text in such a way that some or
all of their content constitutes requirements of this document. For dated
references, only the edition cited applies. For undated references, the latest
edition of the referenced document (including any amendments) applies.

\newcommand{\clausetworeference}[2]{
\item
  \parbox{\linewidth}{#1, \url{#2}}
}

\begin{itemize}
  \clausetworeference{\textbf{Apache Maven}, Apache Software Foundation}{https://maven.apache.org/}
  \clausetworeference{\textbf{Bower API}}{https://bower.io/docs/api/\#install}
  \clausetworeference{\textbf{Common Platform Enumeration (CPE) – Specification}, The MITRE Corporation}{https://cpe.mitre.org/files/cpe-specification_2.2.pdf}
  \clausetworeference{\textbf{Common Platform Enumeration: Naming Specification Version 2.3} (NISTIR 7695), NIST}{https://csrc.nist.gov/publications/detail/nistir/7695/final}
  \clausetworeference{\textbf{npm-package.json}, npm Inc.}{https://docs.npmjs.com/files/package.json}
  \clausetworeference{\textbf{NuGet documentation}, Microsoft}{https://docs.microsoft.com/en-us/nuget/}
  \clausetworeference{\textbf{The Open Group Base Specifications Issue 7} (POSIX.1-2017), 2018 edition, IEEE/Open Group}{https://pubs.opengroup.org/onlinepubs/9699919799/}
  \clausetworeference{\textbf{purl (package URL)}}{https://github.com/package-url/purl-spec}
  \clausetworeference{\textbf{Resource Description Framework (RDF)}, 2014-02-25, W3C}{http://www.w3.org/standards/techs/rdf}
  \clausetworeference{\textbf{The MD5 Message-Digest Algorithm} (RFC-1321), The Internet Society Network Working Group}{https://tools.ietf.org/html/rfc1321}
  \clausetworeference{\textbf{US Secure Hash Algorithm 1 (SHA1)} (RFC-3174), The Internet Society Network Working Group}{https://tools.ietf.org/html/rfc3174}
  \clausetworeference{\textbf{Uniform Resource Identifier (URI): Generic Syntax} (RFC-3986), The Internet Society Network Working Group}{https://tools.ietf.org/html/rfc3986}
  \clausetworeference{\textbf{Augmented BNF for Syntax Specifications: ABNF} (RFC-5234), The Internet Society Network Working Group}{https://tools.ietf.org/html/rfc5234}
  \clausetworeference{\textbf{US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)} (RFC-6234), The Internet Society Network Working Group}{https://tools.ietf.org/html/rfc6234}
  \clausetworeference{\textbf{SoftWare Heritage persistent IDentifiers (SWHIDs)}}{https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html}
  \clausetworeference{\textbf{SPDX and RDF Ontology}}{http://spdx.org/rdf/ontology/spdx-2-2}
  \clausetworeference{\textbf{SPDX License list}, Linux Foundation}{https://spdx.org/licenses/}
  \clausetworeference{\textbf{SPDX License Exceptions list}, Linux Foundation}{https://spdx.org/licenses/exceptions-index.html}
\end{itemize}


\chapter{Terms and definitions}

For the purposes of this document, the following terms and definitions apply.

ISO and IEC maintain terminological databases for use in standardization at the
following addresses:

\begin{itemize}
\item
  ISO Online browsing platform: available at: \url{https://www.iso.org/obp}
\item
  IEC Electropedia: available at \url{http://www.electropedia.org/}
\end{itemize}

\section*{annotations information section}
\textit{section} (3.9) type, an instance of which contains comments about an
SPDX document, SPDX file, SPDX package, or SPDX snippet

\section*{field}
a piece of information contained in a \textit{section} (3.9)

\section*{file information section}
\textit{section} (3.9) type, an instance of which contains facts specific to
files

\section*{other licensing information detected section}
\textit{section} (3.9) type, an instance of which contains a way to capture
information about and refer to licenses that are not on the SPDX license List

\section*{package}
any unit of content that can be associated with a distribution of software

\section*{package information section}
\textit{section} (3.9) type, an instance of which contains facts that are common
properties of a \textit{package}

\section*{relationships between SPDX elements information section}
\textit{section} (3.9) type, an instance of which contains information on how
documents, \textit{packages} (3.5), files and snippets relate to each other

\section*{review information section}
\textit{section} (3.9) type, an instance of which contains information about
persons, organizations or tools that have reviewed a document

\section*{section}
a part of this SPDX specification

\section*{snippet information section}
\textit{section} (3.9) type, an instance of which contains facts that are
specific to a part of a file

\section*{SPDX document}
collection of \textit{section} (3.8) instances each of which contains
information about software organized using the \textit{SPDX format} (3.11)

\section*{SPDX document creation information section}
\textit{section} (3.9) type, an instance of which contains metadata that
associates analysis results with a specific version of an SPDX document (3.11)
and license for use, and provides information on how, when, and by whom the SPDX
document was created

\section*{SPDX format}
the data format defined by this document

\section*{sub-package}
a package which is embedded in a larger package


\chapter{Conformance}

\section{SPDX Current and Previous Versions}
This edition has the version number 2.3 as part of its title. This is a follow
on from ISO/IEC 5962:2021 Information technology — SPDX\textregistered
Specification V2.2.1, and includes new fields. Earlier editions were published
by the SPDX workgroup via the Linux Foundation. The SPDX Specification was
subsequently transposed into the Joint Development Foundation. (Those earlier
editions are: 1.0 (August 2011), 1.1 (August 2012), 1.2 (October 2013), 2.0 (May
2015), 2.1 (November 2016), and 2.2 (May 2020).) Differences between this
edition and earlier ones are reported in Annex J; see also the Bibliography.

\section{Obsolete features}
Over the life of a standard, some older approaches can become obsolete and are
dropped from subsequent editions, possibly with a replacement approach being
provided. Such action involves \textit{deprecating} those outdated features.
This edition identifies all currently deprecated features. No features present
in 2.2.1 have been deprecated in this 2.3 release.

\section{Alternate notation for some conformance requirements}
This standard contains more than a few \textit{cardinality assertions}, each of
which indicates absolute, optional, or conditional requirements. Here are some
examples:

\begin{itemize}
\item
  Cardinality: Mandatory, one.
\item
  Cardinality: Optional, one or many.
\item
  Cardinality: Mandatory, one if {condition} is true or {feature} omitted, zero
  (shall be omitted) if {condition} is false.
\item
  Cardinality: 0..1
\item
  Cardinality: 0..*
\item
  Cardinality: 1..1
\item
  Cardinality: 1..*
\end{itemize}

Each of these assertions can easily be understood as to whether a feature is
required, and if so, how many occurrences are required; also, whether a feature
is permitted, and if so, in what number. As this is the format long familiar to
the SPDX community, it has been preserved in this document.

\section{Standard data format requirements}
The data format specification and recommendations are subject to the following
constraints:

\begin{itemize}
\item
  Shall be in a human readable form.
\item
  Shall be in a syntax that a software tool can read and write.
\item
  Shall be suitable to be checked for syntactic correctness automatically,
  independent of how it was generated (human or tool).
\item
  The SPDX document character set shall support UTF-8 encoding.
\item
  Multiple serialization formats may be used to represent the information being
  exchanged. Current supported formats include:

  \begin{itemize}
  \item
    \textbf{YAML 1.2} see: \url{https://yaml.org/spec/1.2/spec.html}
    \item
      \textbf{JavaScript Object Notation} (JSON) see:
      \url{https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf}
      \begin{itemize}
      \item
        The JSON Schema for SPDX can be found in the SPDX Spec Git Repository
        Schema directory
        (\url{https://github.com/spdx/spdx-spec/blob/master/schemas/spdx-schema.json})
      \end{itemize}
    \item
      \textbf{Resource Description Framework} (RDF also referred to as RDF/XML)
      see: \url{https://www.w3.org/TR/rdf-syntax-grammar/}
    \item
      \textbf{tag:value} flat text file as described in this specification
    \item
      \textbf{.xls} spreadsheets
  \end{itemize}

\item
  In addition to the supported formats, the following format is in development
  with a plan to complete the specification in the next release:
  \begin{itemize}
  \item
    \textbf{Extensible Markup Language} (XML) see:
    \url{https://www.w3.org/TR/2008/REC-xml-20081126/}
  \end{itemize}

\item
  Interoperability between all the supported file formats shall be preserved.
\item
  SPDX defines how to validate a document in each supported format, and how to
  translate a valid document without loss to each other supported format.
\item
  Tags and format properties are case sensitive.
\newpage %% force text item and table onto new page since there isn't enough space.
\item
  Should be easy to recognize in a file system without opening the file. A
  suggested naming convention is shown in Table 1.

  \begin{table}[htbp]
    \caption{Table 1 — SPDX file naming convention}
    \begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
      \toprule
      \textup{Format} & \textup{Extension} \\
      \midrule
      tag:value & *.spdx \\
      RDF & *.spdx.rdf \\
      JSON & *.spdx.json \\
      XML & *.spdx.xml \\
      YAML & *.spdx.yaml or *.spdx.yml \\
      \bottomrule
    \end{tabular*}
  \end{table}

\item
  The convention in this specification is for the RDF examples to use
  \texttt{rdf:about="..."} to represent that a proper Uniform Resource Indicator
  (URI) should be present.
\end{itemize}

\section{Trademark Compliance}
To be designated an SPDX document, a file shall comply with the requirements of
the SPDX Trademark License (See the \href{https://spdx.dev/trademark/}{SPDX
Trademark Page}).

The official copyright notice that shall be used with any verbatim reproduction
and/or distribution of this SPDX Specification 2.3 is:

\begin{quote}
  ``Official SPDX Specification 2.3 Copyright \textcopyright 2010-2022 Linux
  Foundation and its Contributors. Licensed under the Creative Commons
  Attribution License 3.0 Unported. All other rights are expressly reserved.''
\end{quote}

The official copyright notice that shall be used with any non-verbatim
reproduction and/or distribution of this SPDX Specification 2.3, including
without limitation any partial use or combining this SPDX Specification with
another work, is:

\begin{quote}
  ``This is not an official SPDX Specification. Portions herein have been
  reproduced from SPDX Specification 2.3 found at spdx.dev. These portions are
  Copyright \textcopyright 2010-2022 Linux Foundation and its Contributors, and
  are licensed under the Creative Commons Attribution License 3.0 Unported by
  the Linux Foundation and its Contributors. All other rights are expressly
  reserved by Linux Foundation and its Contributors.''
\end{quote}

\section{The SPDX Lite profile}
Rather than conforming to this whole specification, an implementation may
conform with SPDX Lite only, a profile that defines a subset of the SPDX
specification. SPDX Lite aims at the balance between the SPDX standard and
actual workflows in some industries. See Annex G for more information.


\chapter{Composition of an SPDX document}

\section{What this specification covers}
This document contains the specification for an SPDX document, which is made up
of a set of one or more sections, instances of which contain information in the
form of \textit{fields}. The following subclauses introduce the different kinds
of sections allowed. The fields for each kind of section are defined in the
clause corresponding to that section. Within an SPDX document, sections may be
organized, as follows:

\textbf{SPDX v2.3 Document shall contain:}
\begin{itemize}
\item
  SPDX Document Creation Information
\end{itemize}

\textbf{SPDX v2.3 Document may contain:}
\begin{itemize}
\item
  Package Information
\item
  File information
\item
  Snippet Information
\item
  Other Licensing Information Detected
\item
  Relationships between SPDX Elements information
\item
  Annotations Information
\item
  Review information
\end{itemize}

The object model is illustrated by Annex C.

\section{Sections}

\subsection{SPDX document creation information section}
An instance of this section provides the necessary information for forward and
backward compatibility for processing tools.

One instance shall be present for each SPDX document produced.

Cardinality: Mandatory, one.

See Clause 6 for details of the fields in this kind of section.

\subsection{Package information section}
If SPDX information is being used to describe packages, then one instance of the
package information per package being described shall exist. It provides
important meta information about the package as a whole. Packages are an
abstract concept that can be used to refer to any distribution of software,
typically consisting of one or more files and capable of containing
sub-packages. Starting with SPDX 2.0, it is not necessary to have a package
wrapping a set of files.

A package refers to any unit of content that can be associated with a
distribution of software. Typically, a package is composed of one or more
files. An SPDX document may, but is not required to, provide details about the
individual files comprising a package (see Clause 8).

Any of the following non-limiting examples may be (but are not required to be)
represented in SPDX as a package:

\begin{itemize}
\item
  a tarball, zip file or other archive
\item
  a directory or sub-directory
\item
  a separately distributed piece of software which another Package or File uses
  or depends upon (e.g., a Python package, a Go module, ...)
\item
  a container image, and/or each image layer within a container image
\item
  a collection of one or more sub-packages
\item
  a Git repository snapshot from a particular point in time
\end{itemize}

Note that some of these could be represented in SPDX as a file as well.

In an SPDX document, relationship elements can be used to indicate relationships
between packages, such as dependency relationships.

Cardinality: Optional, zero or many.

See Clause 7 for details of the fields in this kind of section.

In \texttt{tag:value} format, the order in which package and files occur is
syntactically significant.

\begin{itemize}
\item
  A new package Information section is denoted by the package name (7.1) field.
\item
  All package information fields shall be grouped together before the start of a
  files section (Clause 8), if file(s) are present.
\item
  All files contained in a package shall immediately follow the applicable
  package information.
\item
  A new package information section (via package name) denotes the start of
  another package.
\item
  Sub-packages shall not be nested inside a package information section, but
  shall be separate and shall use a relationship to clarify.
\item
  Annotations and relationships for the package may appear after the package
  information before any file information.
\end{itemize}

\subsection{File information section}
One instance of the file information may exist for each file in the software
package. It provides important meta information about a given file including
licenses and copyright. Starting with SPDX 2.0, it is not necessary to have a
package wrapping a set of files.

Cardinality: Optional, zero or many.

See Clause 8 for details of the fields in this kind of section.

When implementing \texttt{tag:value} format, the positioning of file elements is
syntactically significant:

\begin{itemize}
\item
  Files are assumed to be associated with the package information that
  immediately precedes it, if a package exists
\item
  Presence of a new package information signals the end of the set of files
  associated with the preceding package, unless an explicit relationship is used
\item
  If a package contains files, the file information sections shall follow its
  package information section
\item
  If a file is not part of any package, it shall precede any package information
  section reference in the SPDX document
\item
  The first field to start off the description of a file shall be the file name
  in \texttt{tag:value} format
\item
  File information is associated with the file name that precedes it
\item
  Annotations on the file and relationships from the file may appear after the
  file information, before the next file or package information section.
\end{itemize}

When implementing file information in RDF, the \texttt{spdx:hasFile} property is
used to associate the package with the file.

\subsection{Snippet information section}
Snippets can optionally be used when a file is known to have some content that
has been included from another original source. They are useful for denoting
when part of a file may have been originally created under another license or
copied from a place with a known vulnerability.

Each instance of Snippet Information shall be associated with a specific file in
an SPDX document.

Cardinality: Optional, zero or many.

See Clause 9 for details of the fields in this kind of section.

When implementing \texttt{tag:value} format, the positioning of snippet elements
is syntactically significant:

\begin{itemize}
\item
  If a file contains snippets, the snippet information section shall follow a
  related file information section (if it exists in the document).
\item
  Presence of a new file or package section signals the end of the set of
  snippets associated with the original file, unless an explicit relationship is
  used.
\item
  The first field to start off the description of a snippet shall be the snippet
  identifier in \texttt{tag:value} format.
\item
  Annotations on the snippet and relationships from the snippet may appear after
  the snippet information, before the next file or package section.
\end{itemize}

\subsection{Other licensing information detected section}
This section is used for any detected, declared or concluded licenses that are
NOT on the SPDX License List. For the most up-to-date version of the list, see
\url{https://spdx.org/licenses/}. The SPDX License List can also be found in
Annex A.

One instance shall be created for every unique license or licensing information
being referenced that does not match one of the licenses on the SPDX License
List.

Cardinality: Optional, zero or many.

See Clause 10 for details of the fields in this kind of section.

\subsection{Relationships between SPDX elements information section}
Packages, files, and snippets are all considered to be SPDX elements, and
relationships can be made explicit between these SPDX elements by using the
fields in this section.

Cardinality: Optional, zero or many.

See Clause 11 for details of the fields in this kind of section.

\subsection{Annotations information section}
Annotations permit the addition of information to validate and clarify ambiguous
SPDX elements (packages, files or snippets).

Cardinality: Optional, zero or many.

See Clause 12 for details of the fields in this kind of section.

This section is now the preferred home for review information.

\subsection{Review information section}
The review information section is included for compatibility with SPDX 1.2, and
is deprecated since SPDX 2.0. Any review information shall use an annotation (as
described in Clause 12) with an annotation type of \texttt{REVIEW}.

Review information may be added after the initial SPDX document has been
created. The set of fields are optional and multiple instances may be
added. Once a reviewer entry is added, the review date associated with the
review is mandatory. The created date shall not be modified as a result of the
addition of information regarding the conduct of a review. A review comments is
optional.

See Clause 13 for details of the fields in this kind of section.

\section{What this specification does not cover}
This document does not address the following:

\begin{itemize}
\item
  Information that cannot be derived from an inspection (whether manual or using
  automated tools) of the package to be analyzed.
\item
  How the data stored in an SPDX document is used by the recipient.
\item
  Any identification of any patent(s) which may or may not relate to the
  package.
\item
  Legal interpretation of the licenses or any compliance actions that have been
  or may need to be taken.
\end{itemize}


\chapter{SPDX document creation information section}

\section{SPDX version field}

\subsection{Description}
Provide a reference number that can be used to understand how to parse and
interpret the rest of the file. It will enable both future changes to the
specification and to support backward compatibility. The version number consists
of a major and minor version indicator. The major field shall be incremented
when incompatible changes between versions are made (one or more sections are
created, modified or deleted). The minor field shall be incremented when
backwards compatible changes are made. The metadata for the SPDX version field
is shown in Table 2.

\begin{table}[htbp]
\caption{Table 2 — Metadata for the SPDX version field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & \texttt{SPDX-M.N} where: \texttt{M} is major version number and
\texttt{N} is minor version number. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Here, parties exchanging information in accordance with the SPDX specification
need to provide 100\% transparency as to which SPDX specification version such
information is conforming to.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{SPDXVersion:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
SPDXVersion: SPDX-2.3
\end{minted}

EXAMPLE 2 RDF: Property spdx:specVersion in class spdx:SpdxDocument

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="...">
  <specVersion>SPDX-2.3</specVersion>
</SpdxDocument>
\end{minted}

This specification uses the prefix \texttt{rdf:} to refer to the RDF/XML
namespace:

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
http://www.w3.org/1999/02/22-rdf-syntax-ns#
\end{minted}

\section{Data license field}

\subsection{Description}

\begin{itemize}
\item
  Compliance with this document includes populating the SPDX fields therein with
  data related to such fields (``SPDX-Metadata'').
\item
  This document contains numerous fields where an SPDX document creator may
  provide relevant explanatory text in SPDX-Metadata.
\item
  Without opining on the lawfulness of ``database rights'' (in jurisdictions
  where applicable), such explanatory text is copyrightable subject matter in
  most Berne Convention countries.
\item
  By using the SPDX specification, or any portion hereof, you hereby agree that
  any copyright rights (as determined by your jurisdiction) in any
  SPDX-Metadata, including without limitation explanatory text, shall be subject
  to the terms of the Creative Commons CC0 1.0 Universal license.
\item
  For SPDX-Metadata not containing any copyright rights, you hereby agree and
  acknowledge that the SPDX-Metadata is provided to you ``as-is'' and without
  any representations or warranties of any kind concerning the SPDX-Metadata,
  express, implied, statutory or otherwise, including without limitation
  warranties of title, merchantability, fitness for a particular purpose,
  non-infringement, or the absence of latent or other defects, accuracy, or the
  presence or absence of errors, whether or not discoverable, all to the
  greatest extent permissible under applicable law.
\item
  The metadata for the data license field is shown in Table 3.
\end{itemize}

\begin{table}[htbp]
\caption{Table 3 — Metadata for the data license field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & \texttt{CC0-1.0} \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
This is to alleviate any concern that content (the data or database) in an SPDX
document is subject to any form of intellectual property right that could
restrict the re-use of the information or the creation of another SPDX document
for the same project(s). This approach avoids intellectual property and related
restrictions over the SPDX document, however individuals can still contract with
each other to restrict release of specific collections of SPDX documents (which
map to software bill of materials) and the identification of the supplier of
SPDX documents.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{DataLicense:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
DataLicense: CC0-1.0
\end{minted}

EXAMPLE 2 RDF: Property spdx:dataLicense in class spdx:SpdxDocument

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="...">
  <dataLicense rdf:resource="http://spdx.org/licenses/CC0-1.0" />
</SpdxDocument>
\end{minted}

\section{SPDX identifier field}

\subsection{Description}
Identify the current SPDX document which may be referenced in relationships by
other files, packages internally and documents externally. To reference another
SPDX document in total, this identifier should be used with the external
document identifier preceding it. See Clause 11 for examples. The metadata for
the SPDX identifier field is shown in Table 4.



\begin{table}[htbp]
\caption{Table 4 — Metadata for SPDX identifier field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & \texttt{SPDXRef-DOCUMENT} \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Provide a way for the document to refer to itself in relationship to other
elements.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{SPDXID:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
SPDXID: SPDXRef-DOCUMENT
\end{minted}

EXAMPLE 2 RDF:

The URI for the document is the document namespace appended by
\texttt{\#SPDXRef-DOCUMENT}

\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{xml}
<spdx:SpdxDocument rdf:about="http://spdx.org/spdxdocs/spdx-example-444504E0-4F89-41D3-9A0C-0305E82C33123#SPDXRef-DOCUMENT">
  ...
</spdx:SpdxDocument>
\end{minted}

\section{Document name field}

\subsection{Description}
Identify name of this document as designated by creator. The metadata for the
document name field is shown in Table 5.

\begin{table}[htbp]
\caption{Table 5 — Metadata for the document name field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & Single line of text. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Here, the name of each document is an important convention and easier to refer
to than the URI.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{DocumentName:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
DocumentName: glibc-v2.3
\end{minted}


\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
DocumentName: ubuntu-14.04
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:name} in class \texttt{spdx:SpdxDocument}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="...">
  <name>glibc-v2.3</name>
</SpdxDocument>
\end{minted}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="...">
  <name>ubuntu-14.04</name>
</SpdxDocument>
\end{minted}

\section{SPDX document namespace field}

\subsection{Description}
Provide an SPDX document-specific namespace as a unique absolute Uniform
Resource Identifier (URI) as specified in RFC-3986, with the exception of the
``\#'' delimiter. The SPDX document URI shall not contain a URI ``part''
(e.g. the ``\#'' character), since the ``\#'' is used in SPDX element URIs
(packages, files, snippets, etc) to separate the document namespace from the
element’s SPDX identifier. Additionally, a scheme (e.g. ``https:'') is required.

The URI shall be unique for the SPDX document including the specific version of
the SPDX document. If the SPDX document is updated, thereby creating a new
version, a new URI for the updated document shall be used. There may only be one
URI for an SPDX document and only one SPDX document for a given URI. The
metadata for the SPDX document namespace field is shown in Table 6.

\begin{table}[htbp]
\caption{Table 6 — Metadata for the SPDX document namespace field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format &

Unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986, with
the following exceptions:
\begin{itemize}
\item
  The SPDX document URI cannot contain a URI ``part'' (e.g., the \texttt{\#}
  delimiter), since the \texttt{\#} is used to uniquely identify SPDX element
  identifiers.
\item
  The URI shall contain a scheme (e.g., \texttt{https:}).
\item
  The URI shall be unique for the SPDX document including the specific version
  of the SPDX document. If the SPDX document is updated, thereby creating a new
  version, a new URI for the updated document shall be used.
\item
  There can only be one URI for an SPDX document and only one SPDX document for
  a given URI.
\end{itemize}

\\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
The URI provides an unambiguous mechanism for other SPDX documents to reference
SPDX elements within this SPDX document. See 6.6 for a description on how
external documents are referenced. Although it is not required, the URI can be
constructed in a way which provides information on how the SPDX document can be
found. For example, the URI can be a URL referencing the SPDX document itself,
if it is available on the internet. A best practice for creating the URI for
SPDX documents available on the public internet is
\texttt{https://[CreatorWebsite]/[pathToSpdx]/[DocumentName]-[UUID]} where:

\begin{itemize}
\item
  \texttt{CreatorWebsite} is a website hosted by the creator of the
  document. (e.g. an SPDX document provided by SPDX would be spdx.org)
\item
  \texttt{PathToSpdx} is a path to where SPDX documents are stored on the
  website (e.g. /spdx/spdxdocs)
\item
  \texttt{DocumentName} is a name given to the SPDX document itself, typically
  the (set of) package name(s) followed by the version. (See 6.4.)
\item
  \parbox[t]{\linewidth}{
    \texttt{UUID} is a universally unique identifier. The UUID could be a
    version 4 random UUID which can be generated from the Online UUID Generator
    (\url{https://www.uuidgenerator.net/}) or a version 5 UUID generated from a
    sha1 checksum known to be unique for this specific SPDX document version.
  }
\item
  If the creator does not own their own website, a default SPDX CreatorWebsite
  and PathToSpdx can be used (\texttt{spdx.org/spdxdocs}). Note that the SPDX
  documents are not currently stored or accessible on this website. The URI is
  only used to create a unique ID following the above conventions.
\end{itemize}

NOTE: The URI does not have to be accessible. It is only intended to provide a
unique ID. In many cases, the URI will point to a Web accessible document, but
this should not be assumed to be the case.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{DocumentNamespace:}

\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{yaml}
DocumentNamespace: https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...
\end{minted}

EXAMPLE 2 RDF: The unique ID is the URI for the SPDX document

\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82...">
  <rdfs:comment>
    This document was created using SPDX 2.3 using
    licenses from the web site.
  </rdfs:comment>
</SpdxDocument>
\end{minted}

This specification uses the prefix \texttt{rdfs:} to refer to the RDF Schema
namespace:

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
http://www.w3.org/2000/01/rdf-schema#
\end{minted}

\section{External document references field}

\subsection{Description}
Identify any external SPDX documents referenced within this SPDX document. The
metadata for the external document references field is shown in Table 7.

\begin{table}[htbp]
\caption{Table 7 — Metadata for the external document references field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 1..* \\
Format & DocumentRef-\texttt{[idstring]} \texttt{[SPDX document URI]}
\texttt{[Checksum]}, where:

\begin{itemize}
\item
  \texttt{[idstring]} is a unique string containing letters, numbers,
  \texttt{.}, \texttt{-} and/or \texttt{+}.
\item
  \texttt{[SPDX document URI]} is the unique ID for the external document as
  defined in 6.5 of that referenced document.
\item
  \texttt{[Checksum]} is a checksum of the external document following the
  checksum format defined in 8.4.
\end{itemize}

\\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
SPDX elements within this document may be related to other SPDX elements
referenced from external SPDX documents. An SPDX element could be a snippet,
file, package, license reference or SPDX document.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{ExternalDocumentRef:}

\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{yaml}
ExternalDocumentRef:DocumentRef-spdx-tool-1.2 https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89-41D3-9A0C-0305E82C3301 SHA1: d6a770ba38583ed4bb4525bd96e50461655d2759
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:externalDocumentRef} in class
\texttt{spdx:SpdxDocument}.

The ExternalDocumentRef contains two properties:

\begin{itemize}
\item
  spdxDocument - the SpdxDocument being referenced
\item
  checksum - the checksum of the referenced SPDX document
\end{itemize}

\newpage %% force long code snippet onto new page so that it fits in as a whole

\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="...">
  <externalDocumentRef rdf:ID="DocumentRef-spdx-tool-1.2">
    <ExternalDocumentRef>
      <spdxDocument rdf:about="https://spdx.org/spdxdocs/spdx-tools-v1.2-3F2504E0-4F89..."/>
      <checksum>
        <Checksum>
          <algorithm rdf:resource="checksumAlgorithm_sha1"/>
          <checksumValue>d6a770ba38583ed4bb4525bd96e50461655d2758
          </checksumValue>
        </Checksum>
      </checksum>
    </ExternalDocumentRef>
  </externalDocumentRef>
</SpdxDocument>
\end{minted}

NOTE: In RDF, a namespace can be created for the external document reference if
a short form name for the external reference is desired.

\section{License list version field}

\subsection{Description}
An optional field for creators of the SPDX document to provide the version of
the SPDX License List used when the SPDX document was created. The metadata for
the license list version field is shown in Table 8.



\begin{table}[htbp]
\caption{Table 8 — Metadata for the license list version field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & \texttt{M.N}, where:
\begin{itemize}
\item
  \texttt{M} is major version number
\item
  \texttt{N} is minor version number.
\end{itemize}
\\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Recognizing that licenses are added to the SPDX License List with each
subsequent version, the intent is to provide recipients of the SPDX document
with the version of the SPDX License List used. This anticipates that in the
future, an SPDX document might have used a version of the SPDX License List that
is older than the then current one.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{LicenseListVersion:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
LicenseListVersion: 3.17
\end{minted}

EXAMPLE 2 RDF: Property \texttt{licenseListVersion} in class
\texttt{spdx:CreationInfo}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<CreationInfo>
  <licenseListVersion>3.17</licenseListVersion>
</CreationInfo>
\end{minted}

\section{Creator field}

\subsection{Description}
Identify who (or what, in the case of a tool) created the SPDX document. If the
SPDX document was created by an individual, indicate the person’s name. If the
SPDX document was created on behalf of a company or organization, indicate the
entity name. If the SPDX document was created using a software tool, indicate
the name and version for that tool. If multiple participants or tools were
involved, use multiple instances of this field. Person name or organization name
may be designated as ``anonymous'' if appropriate. The metadata for the creator
field is shown in Table 9.



\begin{table}[htbp]
\caption{Table 9 — Metadata for the creator field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..* \\
Format & Single line of text with the following keywords:
\begin{itemize}
\item
  \texttt{"Person: person name" and optional "(email)"}
\item
  \texttt{"Organization: organization" and optional "(email)"}
\item
  \texttt{"Tool: toolidentifier-version"}
\end{itemize}
\\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Here, the generation method will assist the recipient of the SPDX document in
assessing the general reliability/accuracy of the analysis information.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{Creator:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
Creator: Person: Jane Doe ()
Creator: Organization: ExampleCodeInspect ()
Creator: Tool: LicenseFind-1.0
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:creator} in class
\texttt{spdx:CreationInfo}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<CreationInfo>
  <creator> Person: Jane Doe () </creator>
  <creator> Organization: ExampleCodeInspect () </creator>
  <creator> Tool: LicenseFind-1.0 </creator>
</CreationInfo>
\end{minted}

\section{Created field}

\subsection{Description}
Identify when the SPDX document was originally created. The date is to be
specified according to combined date and time in UTC format as specified in ISO
8601 standard. This field is distinct from the fields in Clause 12, which
involves the addition of information during a subsequent review. The metadata
for the created field is shown in Table 10.



\begin{table}[htbp]
\caption{Table 10 — Metadata for the created field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & \texttt{YYYY-MM-DDThh:mm:ssZ}, where:
\begin{itemize}
\item
  \texttt{YYYY} is year
\item
  \texttt{MM} is month with leading zero
\item
  \texttt{DD} is day with leading zero
\item
  \texttt{T} is delimiter for time
\item
  \texttt{hh} is hours with leading zero in 24-hour time
\item
  \texttt{mm} is minutes with leading zero
\item
  \texttt{ss} is seconds with leading zero
\item
  \texttt{Z} is universal time indicator
\end{itemize}
\\
\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Here, the time stamp can serve as an indication as to whether the analysis needs
to be updated.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{Created:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
Created: 2010-01-29T18:30:22Z
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:created} in class
\texttt{spdx:CreationInfo}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<CreationInfo>
  <created>2010-01-29T18:30:22Z</created>
</CreationInfo>
\end{minted}

\section{Creator comment field}

\subsection{Description}
An optional field for creators of the SPDX document to provide general comments
about the creation of the SPDX document or any other relevant comment not
included in the other fields. The metadata for the Creator comment field is
shown in Table 11.



\begin{table}[htbp]
\caption{Table 11 — Metadata for the Creator comment field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & Free form text that can span multiple lines. In \texttt{tag:value}
format this is delimited by \texttt{<text> .. </text>}; in RDF, it is delimited
by \texttt{<rdfs:comment>}. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Here, the intent is to provide recipients of the SPDX document with comments by
the creator of the SPDX document.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{CreatorComment:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
CreatorComment: <text>This SPDX document was created by a combination of
using a free tool, as indicated above, and manual analysis by several
authors of the code.</text>
\end{minted}

EXAMPLE 2 RDF: Property \texttt{rdfs:comment} in class
\texttt{spdx:CreationInfo}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<CreationInfo>
  <rdfs:comment>This SPDX document was created by a combination of
  using a free tool, as indicated above, and manual analysis
  by several authors of the code.</rdfs:comment>
</CreationInfo>
\end{minted}

\section{Document comment field}

\subsection{Description}
An optional field for creators of the SPDX document content to provide comments
to the consumers of the SPDX document. The metadata for the document comment
field is shown in Table 12.

\begin{table}[htbp]
\caption{Table 12 — Metadata for the document comment field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & Free form text that can span multiple lines. In \texttt{tag:value}
format this is delimited by \texttt{<text> .. </text>}; in RDF, it is delimited
by \texttt{<rdfs:comment>}. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Here, the intent is to provide readers/reviewers with comments by the creator of
the SPDX document about the SPDX document.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{DocumentComment:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
DocumentComment: <text>This document was created using SPDX 2.3,
version 3.17 of the SPDX License List and refering to licenses
in file MyCompany.Approved.Licenses.spdx.</text>
\end{minted}


EXAMPLE 2 RDF: Property \texttt{rdfs:comment} in class \texttt{SpdxDocument}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<SpdxDocument rdf:about="...">
  <rdfs:comment>
    This document was created using SPDX 2.3, version 3.17 of the SPDX
    License List and refering to licenses in file
    MyCompany.Approved.Licenses.spdx.
  </rdfs:comment>
</SpdxDocument>
\end{minted}


\chapter{Package information section}

If the SPDX information describes a package, the following fields shall be
included per package.

\section{Package name field}
The existence of the Package name fields indicates the existence of package
information in the SPDX information. Hence in order to describe package
information, this field is mandatory.

\subsection{Description}
Identify the full name of the package as given by the Package Originator
(7.6). The metadata for the package name field is shown in Table 13.

\begin{table}[htbp]
\caption{Table 13 — Metadata for the package name field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & Single line of text. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
The name of each package is an important conventional technical identifier to be
maintained for each package.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{PackageName:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
PackageName: glibc
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:name} in class \texttt{spdx:Package}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<Package rdf:about="...">
  <name>glibc</name>
</Package>
\end{minted}


\section{Package SPDX identifier field}

\subsection{Description}
Uniquely identify any element in an SPDX document which may be referenced by
other elements. These may be referenced internally and externally with the
addition of the SPDX document identifier. The metadata for the package SPDX
identifier field is shown in Table 14.

\begin{table}[htbp]
\caption{Table 14 — Metadata for the package SPDX identifier field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & Yes \\
Cardinality & 1..1 \\
Format & “SPDXRef-”\texttt{[idstring]} where \texttt{[idstring]} is a unique
string containing letters, numbers, \texttt{.}, and/or \texttt{-}. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
There may be several versions of the same package within an SPDX document. Each
element needs to be able to be referred to uniquely so that relationships
between elements can be clearly articulated.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{SPDXID:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
SPDXID: SPDXRef-1
\end{minted}

EXAMPLE 2 RDF: The URI for the element will follow the form:

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
[SPDX document namespace]#[SPDX identifier]
\end{minted}

See 6.5 for the definition of the SPDX document namespace and 6.3 for the
definition of the SPDX identifier.

\newpage %% force this line into the same page as the examples

Using \texttt{xml:base}:

\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{xml}
<rdf:RDF xml:base="http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B">
  ...
  <Package rdf:about="#SPDXRef-1">
    ...
  </Package>
</rdf:RDF>
\end{minted}

Using document URI:
\begin{minted}[breaklines, breakbefore=/-, bgcolor=black!10!white]{xml}
<Package rdf:about="http://acme.com/spdxdocs/acmeproj/v1.2/1BE2A4FF-5F1A-48D3-8483-28A9B0349A1B#SPDXRef-1">
    ...
</Package>
\end{minted}


\section{Package version field}

\subsection{Description}
Identify the version of the package. The metadata for the package version field
is shown in Table 15.

\begin{table}[htbp]
\caption{Table 15 — Metadata for the package version field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & Single line of text. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
The versioning of a package is a useful for identification purposes and for
indicating later changes of the package version.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{PackageVersion:}
\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
PackageVersion: 2.11.1
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:versionInfo} in class \texttt{spdx:Package}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<Package rdf:about="...">
  ...
  <versionInfo>2.11.1</versionInfo>
  ...
</Package>
\end{minted}


\section{Package file name field}

\subsection{Description}
Provide the actual file name of the package, or path of the directory being
treated as a package. This may include the packaging and compression methods
used as part of the file name, if appropriate. The metadata for the package file
name field is shown in Table 16.

\begin{table}[htbp]
\caption{Table 16 — Metadata for the package file name field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & Single line of text. \\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
The actual file name of the compressed file containing the package may be a
significant technical element that needs to be included with each package
identification information. If a grouping, like a set of files in a
sub-directory, is being treated as a package, the sub-directory name may be
appropriate to provide. Sub-directory name is preceded with a \texttt{./}. See
RFC 3986 for syntax.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{PackageFileName:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
PackageFileName: glibc-2.11.1.tar.gz
\end{minted}

Sub-directory being treated as a package:

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
PackageFileName: ./myrootdir/mysubdir1
\end{minted}

\newpage %% force RDF examples onto new page

EXAMPLE 2 RDF: Property \texttt{spdx:packageFileName} in class
\texttt{spdx:Package}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<Package rdf:about="...">
  ...
  <packageFileName>glibc-2.11.1.tar.gz</packageFileName>
  ...
</Package>
\end{minted}

Sub-directory being treated as a package:

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<Package rdf:about="...">
  ...
  <packageFileName>./myrootdir/mysubdir1</packageFileName>
  ...
</Package>
\end{minted}


\section{Package supplier field}

\subsection{Description}
Identify the actual distribution source for the package/directory identified in
the SPDX document. This might or might not be different from the originating
distribution source for the package. The name of the Package Supplier shall be
an organization or recognized author and not a web site. For example,
SourceForge is a host website, not a supplier; the supplier for
\url{https://sourceforge.net/projects/bridge/} is ``The Linux Foundation.''

Use \texttt{NOASSERTION} if:

\begin{itemize}
\item
  the SPDX document creator has attempted to but cannot reach a reasonable
  objective determination
\item
  the SPDX document creator has made no attempt to determine this field
\item
  or the SPDX document creator has intentionally provided no information (no
  meaning should be implied by doing so).
\end{itemize}

The metadata for the package supplier field is shown in Table 17.

\begin{table}[htbp]
\caption{Table 17 — Metadata for the package supplier field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & Single line of text with one of the following:
\begin{itemize}
\item
  \texttt{NOASSERTION}
\item
  \texttt{"Person: person name" and optional "(email)"}
\item
  \texttt{"Organization: organization" and optional "(email)"}
\item
  \texttt{"Tool: toolidentifier-version"}
\end{itemize}
\\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Assist with understanding the point of distribution for the code in the
package. This field is vital for ensuring that downstream package recipients can
address any ambiguity or concerns that might arise with the information in the
SPDX document or the contents of the package it documents.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{}PackageSupplier:

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
PackageSupplier: Person: Jane Doe (jane.doe@example.com)
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:supplier} in class \texttt{spdx:Package}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<Package rdf:about="...">
  ...
  <supplier>
    Person: Jane Doe (jane.doe@example.com)
  </supplier>
  ...
</Package>
\end{minted}


\section{Package originator field}

\subsection{Description}
If the package identified in the SPDX document originated from a different
organization or person than identified as Package Supplier (see 7.5 above), this
field identifies from where or whom the package originally came. In some cases,
a package may be created and originally distributed by a different third party
than the Package Supplier of the package. For example, the SPDX document
identifies the package as glibc and the Package Supplier as Red Hat, but the
Free Software Foundation is the Package Originator.

Use \texttt{NOASSERTION} if:

\begin{itemize}
\item
  the SPDX document creator has attempted to but cannot reach a reasonable
  objective determination
\item
  the SPDX document creator has made no attempt to determine this field
\item
  the SPDX document creator has intentionally provided no information (no
  meaning should be implied by doing so).
\end{itemize}

The metadata for the package originator field is shown in Table 18.

\begin{table}[htbp]
\caption{Table 18 — Metadata for the package originator field}
\begin{tabular*}{\linewidth}{>{\itshape}lp{0.75\linewidth}}
\toprule
\textup{Attribute} & \textup{Value} \\
\midrule
Required & No \\
Cardinality & 0..1 \\
Format & Single line of text with one of the following:
\begin{itemize}
\item
  \texttt{NOASSERTION}
\item
  \texttt{"Person: person name" and optional "(email)"}
\item
  \texttt{"Organization: organization" and optional "(email)"}
\item
  \texttt{"Tool: toolidentifier-version"}
\end{itemize}
\\

\bottomrule
\end{tabular*}
\end{table}

\subsection{Intent}
Assist with understanding the point of origin of the code in the package. This
field is vital for understanding who originally distributed a package and should
help in addressing any ambiguity or concerns that might arise with the
information in the SPDX document or the contents of the Package it documents.

\subsection{Examples}
EXAMPLE 1 Tag: \texttt{PackageOriginator:}

\begin{minted}[breaklines, bgcolor=black!10!white]{yaml}
PackageOriginator: Organization: ExampleCodeInspect (contact@example.com)
\end{minted}

EXAMPLE 2 RDF: Property \texttt{spdx:originator} in class \texttt{spdx:Package}

\begin{minted}[breaklines, bgcolor=black!10!white]{xml}
<Package rdf:about="...">
  <originator>
    Organization: ExampleCodeInspect (contact@example.com)
  </originator>
</Package>
\end{minted}


\end{document}
